name: build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:


  initialize:
    runs-on: ubuntu-latest
    outputs:
      base_env: ${{ steps.config.outputs.base_env }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Initial Configuration 
        id: config
        uses: actions/github-script@v4
        with:
          script: |
            if (context.eventName == "pull_request") {
              core.setOutput('base_env', "dev")
              console.log('dev environment')
            }

            if (context.ref == "refs/heads/master") {
              core.setOutput('base_env', "production")
              console.log('prod environment')
            }



  build:
    runs-on: ubuntu-latest
    needs: [initialize]
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - uses: aws-actions/setup-sam@v1


  Deploy:
    name: Deployment
    needs: [build,initialize]
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.initialize.outputs.base_env }}

    env:
      BASE_ENV: ${{ needs.initialize.outputs.base_env }}

    steps:
      - uses: actions/checkout@v2
      - run: echo ${{needs.initialize.outputs.base_env }}
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1


      - run: sam build --use-container
            # sam deploy
      - run: >
          sam deploy --no-confirm-changeset
          --resolve-s3
          --no-fail-on-empty-changeset
          --stack-name csvloader
          --capabilities CAPABILITY_NAMED_IAM
          --region eu-west-1